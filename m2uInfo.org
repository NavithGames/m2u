


* initialization, modularity
momentan rufen die program-spezifischen initalization scripts hub.initialize mit strings auf, hub lädt dann die entsprechenden module, anhand vom übergebenen string, d.h. die möglichen programme sind momentan in hub fest gecoded
um hier modular zu bleiben, ohne dass bei einem zusätzlichem program hub.py geändert werden muss, sollten entweder hub den string direkt in einen modulnamen konvertieren (sollte mit python ja möglich sein) alternativ müssten die init-scripts selbst die module laden und an hub werden dann die geladenen module übergeben statt program-namen

* maya stuff
the riverbank pyQt seems not to work with maya (dll load failed: the specified procedure could not be found) downloading this build instead http://code.google.com/p/pyqt4-win64-binaries/downloads/list works as it should.

** VK_RETURN WM_KEYDOWN problem
aus mayas python heraus funktioniert die WM_KEYDOWN message nicht mit allen keys es ist z.b. machbar, leerzeichen zu senden, aber bestimmte Buchstaben oder eben insbesondere VK_RETURN geht nicht. Es scheint wohl nichts mit den privilegien der threads zu tun zu haben, da ja die message an sich ankommt. Es muss wohl eher der KeyCode der ankommt falsch sein. warum der wert aus maya heraus scheinbar nicht mehr dem original entspricht ist nicht verständlich.
Aus der Konsole heraus (Idle) funktioniert alles. Jeder Code kommt mit WM_KEYDOWN an. Die Alternative zu WM_KEYDOWN ist WM_CHAR, welches vermutlich statt nur "down" eben mehr ein "down and up" sendet. generell ist WM_KEYUP aber unwichtig, das dürfte also nicht die wurzel es problems sein.
Die ersten versuche WM_CHAR mit chars (einzelnen zeichen als string) in python zu füllen gingen nat¨rlich daneben, weil in python die strings natürlich kein einzelner char ist. nach also einem ganzen tag rumgepfriemel klappte dann WM_CHAR mit natürlich einfach dem code des chars, den man senden will, also VK_RETURN. und das auch aus maya heraus.
WM_CHAR scheint also generell sicherer zu sein als WM_KEYDOWN

** features:
toggle wireframe in maya = wireframe in ued
5 = lit oder unlit
das sollte nat¨rlich über settings einstellbar sien, ob man das will

setup distancen, clipping planes etc.
rename objekte, bzw. generell ändern von attributen?

*** security check on sync?
check if names in udk are the same as the just exported names in maya, if not generate new names or warn user? 
es könnte der fall sein, das bestimmte namen in udk schon anderweitig vorhanden sind, udk dann eigene namen vergibt und die namen nicht mehr übereinstimmen. is natürlich ne menge aufwand, wenn alle neu erstellten objekte auf namen hin überprüft werden müssen. automatisch helfen ist vermutlich eh nicht möglich, da man ja nicht genau weiß welches falsch benannte objekt in udk nun welchem in maya entspricht und so. man kann nur den user warnen, dass was schief gelaufen ist

** script jobs mit parameter
das problem einem script job einen parameter zu übergeben ist, dass es direkt dafür keine eingeplante möglichkeit gibt. 
das command kann aber auch als string übergeben werden, in welchen man also den parameter reinschreiben kann.

wenn die funktion allerdings als string übergeben wird, muss der komplette modul-pfad zur funktion in den string geschrieben werden, da diese sonst nicht gefunden wird. Das gab aber aus irgendeinem grund probleme.
Das problem war, dass ich die funktion mit leading underscore maskiert hatte _onObjectChangedSJ(obj) wodurch die funktion in m2u.core.getProgram() (das maya module) nicht sichtbar war. potentiell wird sowas nicht durch import* in andere module importiert?

alternativen sind den inhalt der funktion direkt als string ins command zu schreiben, bzw. als string zwischenzuspeichern und die string variable zu übergeben,
oder den parameter als globale variable zu halten und in der sj-funktion eben auf diese globale var zuzugreifen.

* fix my udk camera button, camera achsen clamping
wenn die camera in maya über kopf 180 grad und dann roll 180 grad gedreht wird, statt um y 180 grad, kann man die camera in udk nicht mehr gut nutzen, da die bewegungen pro achse beschränkt sind. (die kamera steht gewissermaßen auf dem kopf) 

um die camera wieder vernünftig nutzen zu können müssen diese rotations wieder gefixt werden, d.h. das roll muss entfernt werden. dies könnte man entweder einfach rausnehmen, oder man versucht den gleichen winkel zu setzen indem man (z.b. auch der maya camera) eben um z und x achse 180 abzieht und y 180 addiert

genauso scheint es manchmal (sehr selten) zu passieren, dass eine maya rotation (über kopf) in udk nicht umgesetzt wird (weil eine achse blockiert) die frage ist wie häufig tritt das im echten gebrauch auf, tritt es auch mit max auf (oder ist die max-camera auch achsen-beschränkt). evtl. müsste man dann herausfinden welche achsenkombination im udk probleme macht und die rotation im falle einer achsen-wert-überschreitung umrechnen. ist mir aber bisher seeehr selten passiert ,genau 1 mal ;)

* undo redo
das problem ist, dass nicht sicher ist, das nicht in udk etwas getan wurde, was nicht dem undo/redo aus mayax entspricht

* export objects from udk
das problem ist dass das export command NUR bei staticMeshes funktioniert. Der export erzeugt zudem mehrere files, (3 obj files) von denen nur eines den mesh enthält. Packagenamen o.ä. sind sowieso nicht vorhanden im exportierten.
Fbx export ist nicht möglich
Texturen lassen sich über das command nicht exportieren, wenn nicht die source-datei sowieso iwo auf der platte zu finden ist.

die besser funktionierende alternative ist es, einen mesh statt aus dem ContentBrowser oder per command, aus der map zu exportieren. hierbei muss über das menü gegangen werden. 
Das resultat ist eine obj und eine mtl datei, dazu noch die texturen, wenn gewünscht.
das problem hierbei ist, dass ein mesh hier mit seiner aktuellen pos im weltraum exportiert wird. Mesh Name in der Datei entspricht der StaticMesh Instanz (StaticMesh_23 etc.) muss also ebenfalls beim import oder so umbenannt werden iwi.

um den export über die map zu automatisieren, müsste also ein reiner, neuer static mesh mit dem gewünschten model in der map im origin platziert werden.
dann selectiver export mit
F10 (menu), F (File), E (Export), S (Selected Only), paste file path, Enter (save), Enter (Yes textures)
diese windows messages müssten einfach direkt ans UDK hauptfenster gesendet werden
danach muss natürlich evtl. die mtl datei umgeschrieben, und die bilddateien umbenannt werden um den eigentlichen namen zu entsprechen.


** shobjidl
um das mal festzuhalten.
die shobjidl.idl gibts im windows 7 und .net SDK.
diese jagt man durch midl.exe (nutze visual studio 2010 command prompt, damit die pfade richtig gesetzt sind, dann findet der das auch und den cl.exe compiler)
damit wird eine shobjidl.tlb erzeugt, die man mit comtypes (client.GetModule(pfad)) in eine .py wrappen lassen kann. vor der erzeugung der readable name datei shobjidl.py wird aber die erzeugte id-.py datei (lange nummer) gecheckt und es treten an 2 stellen assertion fails auf. die entsprechenden assert lines hab ich auskommentiert und die shobjidl.py anhand einer anderen vorhandenen datei entsprechend per hand erzeugt. merke, dass der pfad zur zur verwendung genutzten tlb datei in der id python datei steht. will man das alles verschicken, sollte man sichergehen dass man den pfad iwi relativ setzt oda so.
danach funktioniert from comtypes.gen import shobjidl und alle enthaltenen Interfaces werden gelistet un so

** letzte chance
das mit shobjidl tut nicht, windows gibt immer null pointer access un shit, evtl. ist doch die problematik dass diese asserts stimmen muessen, weil sie iwo da drin verwendet werden oder so. vielleicht würde es aber auch gar nicht gehen, weil die library nicht korrekt ist oder so murks.

meine versuche, das versteckte Edit field mit dem senden von VK_RETURN auf das 5te tab-stop element im dlg zu senden (der erste pfeil in der adressleiste) gingen nu auch daneben, es passiert einfach nix, evtl. muss das fenster tatsächlich fokus haben. andererseits ht das VK_RETURN nichtmal beim abbrechen button funktioniert, was etwas verwunderlich ist, aber vielleicht reagieren buttons auf sowas nur, wenn sie im fokus sind, und stattdessen muss ein btn_press command oder so gesendet werden? evtl. würde das auch bei dem adresszeilen-element tun dann, da das ja auch ne art button zu sein scheint.
soweit ich mich erinnere scheint es aber auch nichts zu bringen, dem versteckten Edit field einen text zu setzen, wenn es nicht sichtbar ist, bzw. fokus hat?
evtl. liesse sich noch etwas drehen, indem man die threads attached, evtl. hat man dann bessere eingabe-rechte, oder man kann dann auch das fenster als fokus nach vorne holen und hat damit bessere möglichkeiten.
sollte das acuh nicht tun, muss man mal im interent fragen, ob jemand ne bessere idee hat. dafür sollte aber erstmal diverse andere funktionalität stehen. z.b. das bewegen von in beiden progs vorhandenen objekten un so ;)

* attaching the threads
windows AttachThreadInput function , implementiert in udkUI.py
nach dem attachen der threads funktioniert nun auch SendMessage mit VK_RETURN statt PostMessage, und da SendMessage wartet, bis der ziel-thread die message bearbeitet hat, sollte das "warten und hoffen" damit erledigt sein.


* udk save to clip pad , menu und hotkeys nutzen, modifier-keys
es ist ein neues problem aufgetaucht, was irgendwie nur ab und zu vorkommt und nur wenn oft hintereinander copy-paste commands geposted werden.
UEd hat eine "save to clip pad" funktion für ein internes clip board für mit namen versehene clips. Das Tastenkürzel dafür ist Ctrl+Shift+C ein äquivalent in dem Menü existiert nicht. Das command EDIT COPY das wir nutzen macht in den Docs auch keine Aussage darüber, dass man Ctrl+C oder eben save-to-clip-pad ausführen könnte.

evtl. muss statt dem command der viewport gefunden und direkt Ctrl+C an den viewport gesendet werden, evtl. tuts das auch wenn man es direkt ans main-window sendet.
diese variante könnte, da nur ein command statt zwei (text setzen, text abschicken) evtl. sogar weniger belastung für das message-system darstellen. die frage ist ob es zuverlässig ist (oder braucht es den fokus) andererseits ist nun EDIT COPY senden ja auch nicht zuverlässig

der menu-eintrag Copy wird auch zu save-to-clip-pad, wenn man während des clickens die Shift taste gedrückt hält, vermutlich treten die ungewünschten aufrufe also auf, wenn man während dem herumschieben in maya die shift-taste benutzt. eine alternative, um doch das command zu nutzen könnte also sein, windows zu zwingen vorm senden den shift-state abzuschalten. evtl. muss das auch bei den alternativen, ein copy vom UEd zu kriegen beachtet werden, da scheinbar bei allen varianten der shift-state geprüft wird.
ich muss mal schauen wie das bei den windows funktionen ist, ob man beim senden von key-combos ans hauptfenster z.b. den shift-state explizit mitsenden kann

evtl. sollte man auch für andere commands eher gebrauch von menu items oder hotkeys nutzen, da dies generell eine message weniger sein sollte. z.b. gibt es auch menu einträge für select None etc.


auch andere modifier keys machen (manchmal) probleme. hält man in maya während dem bewegen z.b. die ctrl-taste gedrückt, passier im udk gar nix. es bedarf also unbedingt einer windows funktion um modifier keys vorm command senden zu disablen und den vorherigen status danach wieder herzustellen, wenn das mal nicht die kontrolle in maya unmöglich macht 
evtl. passier sowas auch nur bei einzelnen objekten, andererseits scheinen sowieso einzelne objekte immer mal aussetze zu haben. muss man mal mehr testen

* editing objects
when editing objects that already are in udk, we must cut those objects from udk, edit parameters and paste them back. 
this has several disadvantages: it is slow, we always must wait for copy and paste commands to finish execution (and we currently don't know how te be sure that a command was executed, we just wait a certain ammount of time) and the worst of all maybe: 
** it may break links that exist in udk
if an object is somehow referenced by it's name in udk, which is not so uncommon anymore (good old time where one used the tag instead of the name, haha)
if you edit an object in udk or it's name is changed, udk changes the references. but if we cut the object, udk might kill the connection (stuff like kismet). If those links keep the name, after inserting the object, the connection would be there again, but if not, well, this might be an important case to tell the user to not edit objects that are referenced in kismet or so with this tool. 
there is nothing we could do to prevent this from happening aside from using a different unsafe technique of transforming objects through key and mouse inputs into the viewport :D



* Known Problems
** multiple UDKs running at once
currently the first instance that is found is taken (most likely the first one started). We may provide some means of providing a list the user can select from in the future, but it is low priority.

** selection is lost after transforming objects
this is happening because every object is pasted individually, only the last pasted object will be selected in UEd. A reselection is possible but is not very important, we think, so it's a low priority. (yes, pasting all transformed objects at once is possible too and is a future development target)

** a Save To Clip Pad dialog from UDK pops up (and locks the editor) when transforming objects
this happens when holding the shift-key, since shift-copy calls this clip pad functionality from UDK. I never before knew that even existed ;) 
A fix for this should be achievable by telling windows to disable all modifier keys while sending commands to UDK. It is a medium to high priority target since transforming objects with shift+mmb is very common in maya ;)

** no Location attribute found
if you get this error message, you are trying to transform an object that resides in the absolute center of the world in UDK. In that case, there is not Location statement in the ascii-representation. Our script currently uses this as the anchor for replacing the transform information. This is fixable but requires some string-decomposition code work, since objects at zero-position are extremely rare in actual use-cases, we think this is a minor problem with a low priority. Please tell us if you think otherwise ;)

* TODO:
** TODO reestablish correct selection after transforming 
die udk objekte wurden ja gelöscht und einzeln wieder eingefügt, weswegen das letzte objekt zwar selektiert ist, aber eben nicht alle. nach einem transform command sollte die aktuelle selection erneut zugewiesen werden.
das problem hierbei ist, dass die transformation aus den script jobs der einzelnen objekte heraus ausgeführt wird. man könnte zwar am ende vom script job eine funktion aufrufen, die wieder alles selektiert, das wäre aber dann bei jedem objekt der fall, werden 10 objekte bewegt, wird 10 mal die selektion restored und danach wieder gekillt.
man müsste hierfür herausfinden wann das letzte objekt geupdated wurde:
immer wenn die SJs erstellt werden, die variable "lastObject" oder so mit dem zugehörigen objekt setzen, dann kann jeder script job abfragen, ob das eigene objekt das "lastObject" ist. ist dem so, wird vom SJ die function zum reestablishen der selection aufgerufen.

** TODO switchen zwischen y-up und z-up in maya
evtl. kann man das auch automatisch detekten, jedenfalls müssen entsprechend wieder achsen vertauscht werden. das normal aus udk exportierte fbx ist auf z-up ausgelegt, und maya ist auch nicht in der lage das beim import vernünftig umzuwandeln.
solange also kein von unserem script durchgeführtes einzel-import vorhanden ist, dürfte es einfacher sein in z-up zu demonstrieren.
udk zu maya scheint aber genrell um 90 grad um die up-axis gedreht zu sein, in y und z up. alle aus dem udk exportierten meshes wären daher um 90 grad falsch gedreht. dem ist zumindest so, wenn man darauf wert legt, dass die top, side und front ansichten in maya und udk das gleiche zeigen (die axen sind ja eh verschieden ausgerichtet) 
da müsste man nochmal testen wie aus maya exportierte meshes ins udk importiert werden. evtl. muss man sich damit anfreunden, dass die views in maya und udk eine um 90 grad gedrehte welt zeigen (oder man muss 2 achsen vertauschen und alle rotationen mit 90 grad auf y aufschlagen übertragen) evtl. nochmal nachprüfen wie das mit den in fbx exportierten cameras bei arrival war.

x-achse bleibt x-achse und y wird mit -z getauscht, deswegen ist das resultat um 90 grad um die y-achse gedreht
um nur visuelle gleichheit zu erhalten könnte man evlt. auch mayas viewport cameras drehen? evtl. als option halten und die community fragen was so die meinungen dazu sind

** TODO evtl. angleichen der seiten-ansichten
man könnte auch die seiten-ansichten syncen, in udk kann zwar immer nur auf eine sicht gesynct werden, aber evlt. könnte man in maya feststellen, welche cam aktiv ist und diese dann syncen, ist aber wirklich nicht wichtig, denke ich.

** TODO fix save to clip pad with modifier keys problem
siehe oben (udk save to clip pad)

** TODO mehrere objekte mit einem mal kopieren und wieder einfügen
es sollte schneller gehen, einen langen text zu dekonstruieren und insbesondere einen langen text einzufügen als z.b. hundert objekte einzeln. Der Aufwand den Text auseinanderzunehmen dürfte ab einer bereits geringen Zahl an objekten weit unter dem zeitaufwand der Message-kommunikation stehen.
